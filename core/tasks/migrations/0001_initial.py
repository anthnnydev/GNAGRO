# Generated by Django 5.2.1 on 2025-06-19 03:50

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('employees', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TaskCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nombre de la Categoría')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('icon', models.CharField(default='fas fa-leaf', help_text='Ejemplo: fas fa-leaf, fas fa-seedling', max_length=50, verbose_name='Icono FontAwesome')),
                ('color', models.CharField(default='#10B981', help_text='Color en formato hexadecimal #RRGGBB', max_length=7, verbose_name='Color')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Categoría de Tarea',
                'verbose_name_plural': 'Categorías de Tareas',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Título de la Tarea')),
                ('description', models.TextField(verbose_name='Descripción Detallada')),
                ('start_date', models.DateTimeField(verbose_name='Fecha y Hora de Inicio')),
                ('end_date', models.DateTimeField(verbose_name='Fecha y Hora de Fin')),
                ('estimated_hours', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Horas Estimadas')),
                ('location', models.CharField(blank=True, help_text='Ej: Lote 5, Sector Norte, Invernadero 3', max_length=200, verbose_name='Ubicación/Sector')),
                ('payment_type', models.CharField(choices=[('hourly', 'Por Hora'), ('fixed', 'Precio Fijo'), ('unit', 'Por Unidad')], default='hourly', max_length=10, verbose_name='Tipo de Pago')),
                ('hourly_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Tarifa por Hora')),
                ('fixed_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Monto Fijo')),
                ('unit_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Tarifa por Unidad')),
                ('unit_description', models.CharField(blank=True, help_text='Ej: por planta, por metro, por kilo', max_length=100, verbose_name='Descripción de la Unidad')),
                ('priority', models.CharField(choices=[('low', 'Baja'), ('medium', 'Media'), ('high', 'Alta'), ('urgent', 'Urgente')], default='medium', max_length=10, verbose_name='Prioridad')),
                ('status', models.CharField(choices=[('draft', 'Borrador'), ('assigned', 'Asignada'), ('in_progress', 'En Progreso'), ('paused', 'Pausada'), ('completed', 'Completada'), ('cancelled', 'Cancelada')], default='draft', max_length=15, verbose_name='Estado')),
                ('progress_percentage', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Porcentaje de Progreso')),
                ('special_instructions', models.TextField(blank=True, help_text='Herramientas necesarias, precauciones, etc.', verbose_name='Instrucciones Especiales')),
                ('reference_image', models.ImageField(blank=True, null=True, upload_to='task_references/', verbose_name='Imagen de Referencia')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Finalización')),
                ('supervisor', models.ForeignKey(limit_choices_to={'user__user_type__in': ['supervisor', 'admin']}, on_delete=django.db.models.deletion.CASCADE, related_name='supervised_tasks', to='employees.employee', verbose_name='Supervisor')),
            ],
            options={
                'verbose_name': 'Tarea',
                'verbose_name_plural': 'Tareas',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('accepted_at', models.DateTimeField(blank=True, null=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('accepted', 'Aceptada'), ('in_progress', 'En Progreso'), ('completed', 'Completada'), ('rejected', 'Rechazada')], default='pending', max_length=15, verbose_name='Estado de Asignación')),
                ('hours_worked', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5, verbose_name='Horas Trabajadas')),
                ('units_completed', models.IntegerField(default=0, verbose_name='Unidades Completadas')),
                ('employee_notes', models.TextField(blank=True, verbose_name='Notas del Empleado')),
                ('supervisor_notes', models.TextField(blank=True, verbose_name='Notas del Supervisor')),
                ('quality_rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Calificación de Calidad (1-5)')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_assignments', to='employees.employee')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='tasks.task')),
            ],
            options={
                'verbose_name': 'Asignación de Tarea',
                'verbose_name_plural': 'Asignaciones de Tareas',
                'ordering': ['-assigned_at'],
                'unique_together': {('task', 'employee')},
            },
        ),
        migrations.AddField(
            model_name='task',
            name='assigned_employees',
            field=models.ManyToManyField(related_name='assigned_tasks', through='tasks.TaskAssignment', to='employees.employee', verbose_name='Empleados Asignados'),
        ),
        migrations.AddField(
            model_name='task',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='tasks.taskcategory', verbose_name='Categoría'),
        ),
        migrations.CreateModel(
            name='TaskComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Comentario')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_private', models.BooleanField(default=False, help_text='Solo visible para supervisores', verbose_name='Comentario Privado')),
                ('attachment', models.FileField(blank=True, null=True, upload_to='task_comments/', verbose_name='Archivo Adjunto')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employees.employee', verbose_name='Autor')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='tasks.task')),
            ],
            options={
                'verbose_name': 'Comentario de Tarea',
                'verbose_name_plural': 'Comentarios de Tareas',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='TaskProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('progress_description', models.TextField(verbose_name='Descripción del Progreso')),
                ('progress_image', models.ImageField(blank=True, null=True, upload_to='task_progress/', verbose_name='Imagen del Progreso')),
                ('location_lat', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True, verbose_name='Latitud')),
                ('location_lng', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True, verbose_name='Longitud')),
                ('hours_worked_session', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=4, verbose_name='Horas de esta Sesión')),
                ('units_completed_session', models.IntegerField(default=0, verbose_name='Unidades Completadas en esta Sesión')),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_reports', to='tasks.taskassignment')),
            ],
            options={
                'verbose_name': 'Reporte de Progreso',
                'verbose_name_plural': 'Reportes de Progreso',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['status', 'priority'], name='tasks_task_status_01b536_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['start_date', 'end_date'], name='tasks_task_start_d_f954b6_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['supervisor'], name='tasks_task_supervi_e3c373_idx'),
        ),
    ]
